{"version":3,"sources":["ButtonAppBar.js","Hero.js","TextForm.js","SingleLineImageList.js","img_osaka.jpg","img_hokkaido.jpg","img_tokyo.jpg","PopularRegions.js","HomePage.js","HeroImg.js","SwitchListSecondary.js","ConditionPage.js","Map.js","TitlebarImageList.js","EditPage.js","CustomizedTimeline.js","MediaCard.js","AddPage.js","PlanPage.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","Typography","variant","Button","Hero","Box","height","justifyContent","alignItems","display","bgcolor","mx","TextForm","props","useState","initialValue","text","setText","onSubmit","e","preventDefault","TextField","required","fullWidth","id","label","onChange","target","value","flexWrap","overflow","backgroundColor","palette","background","paper","imageList","transform","titleBar","SingleLineImageList","itemData","ImageList","cols","rowHeight","map","item","ImageListItem","onClick","src","img","alt","ImageListItemBar","PopularRegions","imgOsaka","imgTokyo","imgHokkaido","my","HomePage","history","useHistory","handleSubmit","region","push","width","HeroImg","form","SwitchListSecondary","React","checked","setChecked","origin","setOrigin","destination","setDestination","handleToggle","currentIndex","indexOf","newChecked","splice","condition","List","subheader","ListSubheader","ListItem","ListItemText","primary","ListItemIcon","ListItemSecondaryAction","Switch","inputProps","type","ConditionPage","useLocation","state","Map","ref","mapContainerRef","style","icon","addIcon","TitlebarImageList","i","author","spots","component","photos","getUrl","name","subtitle","actionIcon","fontSize","EditPage","useContext","PlanContext","plan","legs","setPlan","setSpots","setLegs","a","google","makePlan","spots2","plan2","legs2","useEffect","console","log","padding","secondaryTail","secondary","main","CustomizedTimeline","timelineitems","length","TimelineItem","TimelineOppositeContent","flex","arrivalTime","TimelineSeparator","TimelineDot","Avatar","TimelineConnector","TimelineContent","Paper","elevation","stayTime","item2","Timeline","media","MediaCard","place","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","CardActions","size","AddPage","query","setQeury","setPlace","findPlace","maps","Marker","lat","geometry","location","lng","service","places","PlacesService","request","fields","locationBias","Promise","resolve","findPlaceFromQuery","results","status","PlacesServiceStatus","OK","createContext","PlanPage","setRegion","useRef","setGoogle","setMap","initialConfig","zoom","center","loader","Loader","apiKey","version","libraries","load","then","current","findPlaces","slice","points","String","setCenter","Provider","path","originName","destinationName","waypts","spot","formatted_address","stopover","drivingDirection","direction","routes","leg","duration","getPoints","getPlan","waypoint_order","point","start_location","end_location","unshift","time","getTimeStr","LatLng","radius","textSearch","waypoints","directionsService","DirectionsService","travelMode","TravelMode","DRIVING","optimizeWaypoints","route","response","catch","sum","h","Math","floor","m","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01be7603.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            News\r\n          </Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nexport default function Hero() {\r\n  return(\r\n    <Box height=\"70vh\" justifyContent=\"center\" alignItems=\"center\" display=\"flex\" bgcolor='#3f51b5'>\r\n      <Box mx='auto'>\r\n        <Typography variant=\"h2\"><Box color=\"white\">Let's plan!</Box></Typography>\r\n        <Typography variant=\"subtitle1\"><Box color=\"white\">旅行の予定を自動で作成</Box></Typography>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport {\r\n  Box,\r\n  TextField,\r\n} from '@material-ui/core';\r\n\r\nexport default function TextForm(props){\r\n  const [text, setText] = useState(props.initialValue);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.onSubmit(text);\r\n  }\r\n  const handleChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n  return(\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField required fullWidth id=\"standard-basic\" label={props.label} variant=\"filled\" onChange={handleChange} value={text}/>\r\n    </form>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ImageList from '@material-ui/core/ImageList';\r\nimport ImageListItem from '@material-ui/core/ImageListItem';\r\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\n// import itemData from './itemData';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  imageList: {\r\n    flexWrap: 'nowrap',\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n  },\r\n  title: {\r\n    color: 'white',\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const itemData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\n\r\n\r\nexport default function SingleLineImageList(props) {\r\n  const classes = useStyles();\r\n  const itemData = props.itemData;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ImageList className={classes.imageList} cols={2.5} rowHeight={120}>\r\n        {itemData.map((item, id) => (\r\n          <ImageListItem key={item.img} onClick={(e) => props.onClick(e, id)}>\r\n            <img src={item.img} alt={item.title} />\r\n            <ImageListItemBar\r\n              title={item.title}\r\n              classes={{\r\n                root: classes.titleBar,\r\n                title: classes.title,\r\n              }}\r\n            />\r\n          </ImageListItem>\r\n        ))}\r\n      </ImageList>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/img_osaka.c9ba6993.jpg\";","export default __webpack_public_path__ + \"static/media/img_hokkaido.bd87e191.jpg\";","export default __webpack_public_path__ + \"static/media/img_tokyo.ebbf7b3f.jpg\";","import {\r\n  Box,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nimport SingleLineImageList from './SingleLineImageList';\r\nimport imgOsaka from './img_osaka.jpg';\r\nimport imgHokkaido from './img_hokkaido.jpg';\r\nimport imgTokyo from './img_tokyo.jpg';\r\n\r\nexport default function PopularRegions(props){\r\n  var itemData = [\r\n    {\r\n      img: imgOsaka,\r\n      title: '大阪',\r\n    },\r\n    {\r\n      img: imgTokyo,\r\n      title: '東京',\r\n    },\r\n    {\r\n      img: imgHokkaido,\r\n      title: '北海道',\r\n    },\r\n  ];\r\n\r\n  const handleClick = (e, id) => {\r\n    props.onClick(itemData[id].title);\r\n  }\r\n\r\n  return(\r\n    <Box my={5} mx={5}>\r\n      <Typography variant='subtitle1'><Box color=\"gray\">人気のエリア</Box></Typography>\r\n      <SingleLineImageList itemData={itemData} onClick={handleClick}/>\r\n    </Box>\r\n  )\r\n}\r\n","import {\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport ButtonAppBar from './ButtonAppBar';\r\nimport Hero from './Hero';\r\nimport TextForm from './TextForm';\r\nimport PopularRegions from './PopularRegions';\r\nimport Prefectures from './Prefectures'\r\n\r\nimport {\r\n  Box,\r\n} from '@material-ui/core';\r\n\r\n\r\nexport default function HomePage(){\r\n  const history = useHistory();\r\n  const handleSubmit = (region) => {\r\n    history.push('/condition', {region: region});\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <ButtonAppBar />\r\n      <Hero />\r\n      <Box mx={5} my={5}>\r\n        <TextForm onSubmit={handleSubmit} initialValue={'大阪'} label={'Region'}/>\r\n      </Box>\r\n\r\n      <PopularRegions onClick={handleSubmit}/>\r\n    </>\r\n  )\r\n}\r\n","import imgOsaka from './img_osaka.jpg';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '30vh',\r\n  },\r\n}));\r\n\r\nexport default function HeroImg(props){\r\n  const classes = useStyles();\r\n  // var item = props.img;\r\n\r\n  return(\r\n    <img className={classes.root} src={imgOsaka} alt={'alt'} />\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useState } from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport WifiIcon from '@material-ui/icons/Wifi';\r\nimport BluetoothIcon from '@material-ui/icons/Bluetooth';\r\nimport { TextField, Button, Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  form: {\r\n    width: '50vw',\r\n  }\r\n}));\r\n\r\nexport default function SwitchListSecondary(props) {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState(['wifi']);\r\n  const [origin, setOrigin] = useState('');\r\n  const [destination, setDestination] = useState('');\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleChangeOrigin = (e) => {\r\n    setOrigin(e.target.value);\r\n  }\r\n  const handleChangeDestination = (e) => {\r\n    setDestination(e.target.value);\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const condition = {origin, destination};\r\n    props.onSubmit(condition);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <List subheader={<ListSubheader>Settings</ListSubheader>} className={classes.root}>\r\n        <ListItem>\r\n          <ListItemText primary=\"出発\"/>\r\n          <TextField required variant=\"filled\" onChange={handleChangeOrigin}/>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary=\"到着\"/>\r\n          <TextField variant=\"filled\" onChange={handleChangeDestination}/>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemIcon>\r\n            <WifiIcon />\r\n          </ListItemIcon>\r\n          <ListItemText id=\"switch-list-label-wifi\" primary=\"Wi-Fi\" />\r\n          <ListItemSecondaryAction>\r\n            <Switch\r\n              edge=\"end\"\r\n              onChange={handleToggle('wifi')}\r\n              checked={checked.indexOf('wifi') !== -1}\r\n              inputProps={{ 'aria-labelledby': 'switch-list-label-wifi' }}\r\n            />\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemIcon>\r\n            <BluetoothIcon />\r\n          </ListItemIcon>\r\n          <ListItemText id=\"switch-list-label-bluetooth\" primary=\"Bluetooth\" />\r\n          <ListItemSecondaryAction>\r\n            <Switch\r\n              edge=\"end\"\r\n              onChange={handleToggle('bluetooth')}\r\n              checked={checked.indexOf('bluetooth') !== -1}\r\n              inputProps={{ 'aria-labelledby': 'switch-list-label-bluetooth' }}\r\n            />\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      </List>\r\n      <Box display='flex' justifyContent='center'>\r\n        <Button type=\"submit\" variant=\"contained\">PLAN!</Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n}\r\n","import {\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nimport ButtonAppBar from './ButtonAppBar';\r\nimport HeroImg from './HeroImg';\r\nimport SwitchListSecondary from './SwitchListSecondary';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Box,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '80vw',\r\n  },\r\n}));\r\n\r\nexport default function ConditionPage(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const region = location.state.region;\r\n\r\n  const handleSubmit = (condition) => {\r\n    history.push('/plan', {region, ...condition});\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <ButtonAppBar />\r\n      <HeroImg region={region} />\r\n      <Box display='flex' justifyContent=\"center\">\r\n        <Box className={classes.root}>\r\n          <SwitchListSecondary onSubmit={handleSubmit} />\r\n        </Box>\r\n      </Box>\r\n\r\n    </>\r\n  )\r\n}\r\n","import { useState, useRef, useEffect } from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '30vh',\r\n  },\r\n}));\r\n\r\nexport default function Map(props){\r\n  return(\r\n    <>\r\n      <div ref={props.mapContainerRef} style={{height: \"30vh\"}}>I can use the DOM with react ref</div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ImageList from '@material-ui/core/ImageList';\r\nimport ImageListItem from '@material-ui/core/ImageListItem';\r\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n// import itemData from './itemData';\r\nimport imgOsaka from './img_osaka.jpg';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {\r\n  Box,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  imageList: {\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)',\r\n  },\r\n  addIcon: {\r\n    width: 50,\r\n    height: 50,\r\n  }\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const itemData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\nexport default function TitlebarImageList(props) {\r\n  const classes = useStyles();\r\n  var itemData = [];\r\n  for(var i = 0; i < 5; i++){\r\n    var item = {\r\n      img: imgOsaka,\r\n      title: 'Osaka',\r\n      author: 'author',\r\n    }\r\n    itemData.push(item);\r\n  }\r\n  const {spots} = props;\r\n  if(spots == null) return(null);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ImageList rowHeight={180} className={classes.imageList}>\r\n        <ImageListItem key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n          <ListSubheader component=\"div\">December</ListSubheader>\r\n        </ImageListItem>\r\n        {spots.map((item) => (\r\n          <ImageListItem key={item.photos == null ? null: item.photos[0].getUrl()}>\r\n            <img src={item.photos == null ? null: item.photos[0].getUrl()} alt={item.name} />\r\n            <ImageListItemBar\r\n              title={item.name}\r\n              subtitle={<span>by: {item.name}</span>}\r\n              actionIcon={\r\n                <IconButton aria-label={`info about ${item.name}`} className={classes.icon}>\r\n                  <InfoIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </ImageListItem>\r\n        ))}\r\n        <ImageListItem>\r\n          <Box display='flex' justifyContent='center' alignItems=\"center\" height='100%'>\r\n          <IconButton onClick={props.onClick}>\r\n            <AddIcon fontSize='large' className={classes.addIcon}/>\r\n          </IconButton>\r\n          </Box>\r\n        </ImageListItem>\r\n      </ImageList>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  useEffect,\r\n  useContext,\r\n} from 'react';\r\nimport {\r\n  useHistory,\r\n} from 'react-router-dom';\r\n\r\nimport ButtonAppBar from './ButtonAppBar';\r\nimport Map from './Map';\r\nimport SwitchListSecondary from './SwitchListSecondary';\r\nimport TitlebarImageList from './TitlebarImageList';\r\nimport{\r\n  makePlan,\r\n  PlanContext,\r\n} from './PlanPage';\r\n\r\nimport {\r\n  Button,\r\n} from '@material-ui/core'\r\n\r\nexport default function EditPage(props){\r\n  const history = useHistory();\r\n  const {spots, plan, legs, region, setPlan, setSpots, setLegs} = useContext(PlanContext);\r\n  const handleClick = () => {\r\n    history.push('/plan/add');\r\n  }\r\n  const handleClickReturn = () => {\r\n    history.push('/plan');\r\n  }\r\n  const handleSubmit = async () => {\r\n    const {google} = props;\r\n    const [spots2, plan2, legs2] = await makePlan(google, region, '大阪駅', '萱嶋駅', spots);\r\n    setPlan(plan2)\r\n    setSpots(spots2)\r\n    setLegs(legs2);\r\n    history.push('/plan');\r\n  }\r\n  useEffect(() => {\r\n    console.log('edit');\r\n  }, [])\r\n  return(\r\n    <>\r\n      <TitlebarImageList onClick={handleClick} spots={props.spots}/>\r\n      <SwitchListSecondary onSubmit={handleSubmit}/>\r\n      <Button type=\"submit\" variant=\"contained\" onClick={handleClickReturn}>辞める</Button>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport HotelIcon from '@material-ui/icons/Hotel';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TrainIcon from '@material-ui/icons/Train';\r\n\r\nimport {\r\n  Box,\r\n  Avatar,\r\n} from '@material-ui/core'\r\nimport imgOsaka from './img_osaka.jpg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: '6px 16px',\r\n  },\r\n  secondaryTail: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport default function CustomizedTimeline(props) {\r\n  const classes = useStyles();\r\n  var {plan, legs} = props;\r\n  if(plan == null || legs == null) return(null);\r\n  var timelineitems = []\r\n  for(var i = 0; i < plan.length; i++){\r\n    var item = (\r\n      <TimelineItem>\r\n        <TimelineOppositeContent style={{ flex: 0.1 }}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {plan[i].arrivalTime.text}\r\n          </Typography>\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineDot>\r\n            <Avatar alt=\"Remy Sharp\" src={plan[i].photos == null ? null: plan[i].photos[0].getUrl()} />\r\n          </TimelineDot>\r\n          <TimelineConnector />\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Paper elevation={3} className={classes.paper}>\r\n            <Typography variant=\"h6\" component=\"h1\">\r\n              {plan[i].name}\r\n            </Typography>\r\n            <Typography>stay time: {plan[i].stayTime}</Typography>\r\n          </Paper>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n    )\r\n    timelineitems.push(item);\r\n    var item2 = (\r\n      <TimelineItem>\r\n        <TimelineOppositeContent style={{ flex: 0.1 }}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {plan[i].arrivalTime.text}\r\n          </Typography>\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineDot>\r\n            <Avatar>\r\n              <TrainIcon />\r\n            </Avatar>\r\n          </TimelineDot>\r\n          <TimelineConnector />\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Box display=\"flex\" alignItems='center' height='100%'>\r\n            17min by transit\r\n          </Box>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n    )\r\n    timelineitems.push(item2);\r\n  }\r\n  return(\r\n    <Timeline>\r\n      {timelineitems}\r\n    </Timeline>\r\n  );\r\n\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function MediaCard(props) {\r\n  const classes = useStyles();\r\n  const {place} = props;\r\n  if(place == null) return(null);\r\n  console.log(place);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={place[0].photos[0].getUrl()}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {place[0].name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n            across all continents except Antarctica\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={props.onClick}>\r\n          ADD\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import ButtonAppBar from './ButtonAppBar';\r\nimport Map from './Map';\r\nimport MediaCard from './MediaCard';\r\nimport{\r\n  useHistory,\r\n} from 'react-router-dom';\r\nimport{\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Button,\r\n} from '@material-ui/core';\r\n\r\nexport default function AddPage(props){\r\n  const [query, setQeury] = useState('');\r\n  const [place, setPlace] = useState(null);\r\n  const history = useHistory();\r\n  const {spots} = props;\r\n  const handleClick = () => {\r\n    console.log(place);\r\n    spots.push(place[0]);\r\n    history.push('/plan/edit');\r\n  }\r\n  const handleChange = (e) => {\r\n    setQeury(e.target.value);\r\n  }\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const {google, map} = props;\r\n    var place = await findPlace(google, map, query);\r\n    new google.maps.Marker({\r\n      position: {\r\n        lat: place[0].geometry.location.lat(),\r\n        lng: place[0].geometry.location.lng(),\r\n      },\r\n      label: '!',\r\n      map: map,\r\n    });\r\n    setPlace(place);\r\n  }\r\n  const handleClickReturn = () => {\r\n    history.push('/plan/edit');\r\n  }\r\n  return(\r\n    <>\r\n      <Box mx={5} my={5}>\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField fullWidth variant='filled' onChange={handleChange}/>\r\n        </form>\r\n        <Box my={5}>\r\n          <MediaCard place={place} onClick={handleClick}/>\r\n        </Box>\r\n        <Box display='flex' justifyContent='center' my={5}>\r\n          <Button type=\"submit\" variant=\"contained\" onClick={handleClickReturn}>戻る</Button>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nconst findPlace = async (google, map, query, location) => {\r\n  var service = new google.maps.places.PlacesService(map);\r\n  var request = {\r\n    query: query,\r\n    fields: ['name', 'geometry', 'formatted_address', 'photos'],\r\n  };\r\n  if(location != null){\r\n    request.locationBias = {lat: location.lat(), lng: location.lng()};\r\n  }\r\n  var place = await new Promise(resolve => {\r\n    service.findPlaceFromQuery(request, function(results, status) {\r\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n        resolve(results);\r\n      }\r\n    });\r\n  });\r\n  return place;\r\n}\r\n","import { useState, useRef, useEffect, createContext } from 'react'\r\n\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nimport { Loader } from \"@googlemaps/js-api-loader\"\r\n\r\nimport Map from './Map';\r\nimport EditPage from './EditPage';\r\nimport ButtonAppBar from './ButtonAppBar';\r\nimport CustomizedTimeline from './CustomizedTimeline'\r\nimport AddPage from './AddPage';\r\n\r\nimport {\r\n  Button,\r\n  Box,\r\n} from '@material-ui/core'\r\n\r\nexport const PlanContext = createContext();\r\n\r\nexport default function PlanPage(props){\r\n  const [plan, setPlan] = useState(null);\r\n  const [spots, setSpots] = useState(null);\r\n  const [legs, setLegs] = useState(null);\r\n  const [region, setRegion] = useState(null);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const mapContainerRef = useRef(null);\r\n  const [google, setGoogle] = useState(null);\r\n  const [map, setMap] = useState(null);\r\n  const value = {\r\n    plan,\r\n    setPlan,\r\n    spots,\r\n    setSpots,\r\n    legs,\r\n    setLegs,\r\n    region,\r\n    setRegion,\r\n  }\r\n  useEffect(async () => {\r\n    console.log('plan');\r\n    const API_KEY = \"AIzaSyCkNip5D4glIDSddF__OlVzY1ovG5yVf7g\";\r\n    const initialConfig = {\r\n      zoom: 12,\r\n      center: { lat: 35.6432027, lng: 139.6729435 }\r\n    }\r\n    const loader = new Loader({\r\n      apiKey: API_KEY,\r\n      version: \"weekly\",\r\n      libraries: [\"places\"],\r\n    });\r\n    const google = await loader.load().then((google) => {\r\n      return google;\r\n    })\r\n    setGoogle(google);\r\n\r\n    const map = new google.maps.Map(mapContainerRef.current, initialConfig);\r\n    setMap(map);\r\n\r\n    var regionName = '大阪', originName = '大阪駅', destinationName = '萱嶋駅';\r\n\r\n    var region = await findPlace(google, map, regionName);\r\n    setRegion(region);\r\n\r\n    var places = await findPlaces(google, map, '観光', region[0].geometry.location);\r\n\r\n    const [points, plan, legs] = await makePlan(google, region, '大阪駅', '萱嶋駅', places.slice(0, 5));\r\n    setPlan(plan);\r\n    setLegs(legs);\r\n    setSpots(points);\r\n    for(var i = 0; i < plan.length; i++){\r\n      new google.maps.Marker({\r\n        position: {\r\n          lat: plan[i].geometry.location.lat(),\r\n          lng: plan[i].geometry.location.lng(),\r\n        },\r\n        label: String(i),\r\n        map: map,\r\n      });\r\n    }\r\n    map.setCenter({lat: plan[0].geometry.location.lat(), lng: plan[0].geometry.location.lng()});\r\n    console.log(region);\r\n    console.log(places);\r\n    // console.log(direction);\r\n    console.log(plan);\r\n    console.log(legs);\r\n    console.log(points);\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    history.push('/plan/edit');\r\n  }\r\n\r\n  return(\r\n    <PlanContext.Provider value={value}>\r\n      <ButtonAppBar />\r\n      <Map mapContainerRef={mapContainerRef}/>\r\n      <Switch>\r\n        <Route path='/plan/edit'>\r\n          <EditPage plan={plan} spots={spots} region={region} google={google} setPlan={setPlan} setSpots={setSpots} setLegs={setLegs}/>\r\n        </Route>\r\n        <Route path='/plan/add'>\r\n          <AddPage google={google} map={map} plan={plan} spots={spots}/>\r\n        </Route>\r\n        <Route path='/plan'>\r\n          <CustomizedTimeline plan={plan} legs={legs} spots={spots}/>\r\n          <Box display='flex' justifyContent='center'>\r\n            <Button type=\"submit\" variant=\"contained\" onClick={handleClick}>EDIT</Button>\r\n          </Box>\r\n        </Route>\r\n      </Switch>\r\n    </PlanContext.Provider>\r\n  )\r\n}\r\n\r\nexport async function makePlan(google, region, originName, destinationName, spots){\r\n  var waypts = spots.map(spot => {\r\n    return {\r\n      location: spot.formatted_address,\r\n      stopover: true,\r\n    }\r\n  });\r\n  var direction = await drivingDirection(google, originName, destinationName, waypts);\r\n\r\n  var legs = direction.routes[0].legs;\r\n  legs.map(leg => {\r\n    leg.duration.value *= 2;\r\n  })\r\n  var points = getPoints(direction, spots);\r\n  var plan = getPlan(points, legs, direction);\r\n  // [plan, legs] = await insertLunch(google, map, plan, legs);\r\n  console.log('makePlan');\r\n  return [points, plan, legs];\r\n}\r\n\r\nconst getPoints = (direction, places) => {\r\n  var points = direction.routes[0].waypoint_order.map(i => {\r\n    var point = places[i];\r\n    point.stayTime = 1 * 3600;\r\n    return point;\r\n  });\r\n  return points;\r\n}\r\n\r\nconst getPlan = (points, legs, direction) => {\r\n  var plan = points.slice();\r\n  var origin = {\r\n    name: direction.request.origin.query,\r\n    geometry: {\r\n      location: direction.routes[0].legs[0].start_location,\r\n    },\r\n    stayTime: 0,\r\n  };\r\n  var destination = {\r\n    name: direction.request.destination.query,\r\n    geometry: {\r\n      location: direction.routes[0].legs.slice(-1)[0].end_location,\r\n    },\r\n    stayTime: 0,\r\n  };\r\n  plan.unshift(origin);\r\n  plan.push(destination);\r\n\r\n  var time = 9 * 3600;\r\n  for(var i = 0; i < plan.length; i++){\r\n    plan[i].arrivalTime = {\r\n      text: getTimeStr(time),\r\n      value: time,\r\n    };\r\n    if(i < legs.length){\r\n      time += plan[i].stayTime + legs[i].duration.value;\r\n    }\r\n  }\r\n  return plan;\r\n}\r\n\r\n// const insertLunch = async (google, map, points, legs) => {\r\n//   var time = 9 * 3600;\r\n//   var p = [], l = [];\r\n//   var gotLunch = false;\r\n//   for(var i = 0; i < points.length; i++){\r\n//     p.push(points[i]);\r\n//     time += points[i].stayTime;\r\n//     if(time >= 12 * 3600 && gotLunch == false){\r\n//       var [lunchPlace] = await findPlace(google, map, '昼食', points[i].geometry.location);\r\n//       lunchPlace.stayTime = 3600;\r\n//\r\n//       var go = await drivingDirection(google, points[i].formatted_address, lunchPlace.formatted_address);\r\n//       var goLeg = go.routes[0].legs[0];\r\n//       var back = await drivingDirection(google, lunchPlace.formatted_address, points[i+1].formatted_address);\r\n//       var backLeg = back.routes[0].legs[0];\r\n//       goLeg.duration.value *= 2;\r\n//       backLeg.duration.value *= 2;\r\n//       time += goLeg.duration.value;\r\n//       lunchPlace.arrivalTime = {\r\n//         text: getTimeStr(time),\r\n//         value: time,\r\n//       }\r\n//       time += backLeg.duration.value;\r\n//       console.log(lunchPlace);\r\n//       p.push(lunchPlace);\r\n//       l.push(goLeg);\r\n//       l.push(backLeg);\r\n//       time += (goLeg.duration.value + backLeg.duration.value);\r\n//       gotLunch = true;\r\n//     }\r\n//     else{\r\n//       if(i < legs.length){\r\n//         time += legs[i].duration.value;\r\n//         l.push(legs[i]);\r\n//       }\r\n//     }\r\n//   }\r\n//   return [p, l];\r\n// }\r\n\r\n\r\n\r\nconst findPlace = async (google, map, query, location) => {\r\n  var service = new google.maps.places.PlacesService(map);\r\n  var request = {\r\n    query: query,\r\n    fields: ['name', 'geometry', 'formatted_address'],\r\n  };\r\n  if(location != null){\r\n    request.locationBias = {lat: location.lat(), lng: location.lng()};\r\n  }\r\n  var place = await new Promise(resolve => {\r\n    service.findPlaceFromQuery(request, function(results, status) {\r\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n        resolve(results);\r\n      }\r\n    });\r\n  });\r\n  return place;\r\n}\r\n\r\nconst findPlaces = async (google, map, query, location) => {\r\n  var service = new google.maps.places.PlacesService(map);\r\n  var request = {\r\n    location: new google.maps.LatLng(location.lat(), location.lng()),\r\n    radius: '5000',\r\n    query: '観光',\r\n  }\r\n  var places = await new Promise(resolve => {\r\n    service.textSearch(request, (results, status) => {\r\n      if (status == google.maps.places.PlacesServiceStatus.OK) {\r\n        resolve(results);\r\n      }\r\n    })\r\n  })\r\n  return places;\r\n}\r\n\r\nconst drivingDirection = async (google, origin, destination, waypoints) => {\r\n  const directionsService = new google.maps.DirectionsService();\r\n  // const directionsRenderer = new google.maps.DirectionsRenderer({suppressPolylines: true});\r\n  // directionsRenderer.setMap(map);\r\n  var request = {\r\n    origin,\r\n    destination,\r\n    travelMode: google.maps.TravelMode.DRIVING,\r\n  };\r\n  if(waypoints != null){\r\n    request.waypoints = waypoints;\r\n    request.optimizeWaypoints = true;\r\n  }\r\n\r\n  var direction = await directionsService\r\n    .route(request)\r\n    .then((response) => {\r\n      // directionsRenderer.setDirections(response);\r\n      return response;\r\n    })\r\n    .catch((e) => console.log(\"Directions request failed due to \" + e));\r\n  return direction\r\n}\r\n\r\nfunction getTimeStr(sum){\r\n  var h = Math.floor(sum / 3600);\r\n  var m = Math.floor((sum % 3600) / 60);\r\n  return `${('00' + h).slice(-2)}:${('00' + m).slice(-2)}`;\r\n}\r\n\r\n\r\n// export default function PlanPage(props){\r\n//   const history = useHistory();\r\n//   const location = useLocation();\r\n//   const mapContainerRef = useRef(null);\r\n//   const google = useGoogle();\r\n//   const map = useMap(google, mapContainerRef);\r\n//   const region = useFindPlace(google, map, 'Osaka, Japan');\r\n//   const places = useFindPlaces(google, map, '観光', region);\r\n//   var waypts;\r\n//   if(places != null){\r\n//     waypts = places.slice(0, 5).map(place => {\r\n//       return {\r\n//         location: place.formatted_address,\r\n//         stopover: true,\r\n//       }\r\n//     });\r\n//   }\r\n//\r\n//   const direction = useDirection(google, '大阪駅', '萱嶋駅', waypts);\r\n//   return(\r\n//     <>\r\n//       <Map mapContainerRef={mapContainerRef}/>\r\n//       <CustomizedTimeline />\r\n//     </>\r\n//   )\r\n// }\r\n//\r\n// const useGoogle = () => {\r\n//   const [google, setGoogle] = useState(null);\r\n//   useEffect(() => {\r\n//     const API_KEY = \"AIzaSyCkNip5D4glIDSddF__OlVzY1ovG5yVf7g\";\r\n//     const loader = new Loader({\r\n//       apiKey: API_KEY,\r\n//       version: \"weekly\",\r\n//       libraries: [\"places\"],\r\n//     });\r\n//     loader.load().then((google) => {\r\n//       setGoogle(google);\r\n//     })\r\n//   })\r\n//   return google;\r\n// }\r\n//\r\n// const useMap = (google, mapContainerRef) => {\r\n//   const [map, setMap] = useState(null);\r\n//   useEffect(() => {\r\n//     if(google == null || mapContainerRef == null) return;\r\n//     const initialConfig = {\r\n//       zoom: 12,\r\n//       center: { lat: 35.6432027, lng: 139.6729435 }\r\n//     }\r\n//     const map = new google.maps.Map(mapContainerRef.current, initialConfig);\r\n//     setMap(map);\r\n//   }, [google, mapContainerRef]);\r\n//   return map;\r\n// }\r\n//\r\n// const useFindPlace = (google, map, query, location) => {\r\n//   const [place, setPlace] = useState(null);\r\n//   useEffect(() => {\r\n//     if(google == null || map == null) return;\r\n//     var service = new google.maps.places.PlacesService(map);\r\n//     var request = {\r\n//       query: query,\r\n//       fields: ['name', 'geometry', 'formatted_address'],\r\n//     };\r\n//     if(location != null){\r\n//       request.locationBias = {lat: location.lat(), lng: location.lng()};\r\n//     }\r\n//     service.findPlaceFromQuery(request, function(results, status) {\r\n//       if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n//         setPlace(results);\r\n//       }\r\n//     });\r\n//   }, [google, map])\r\n//   return place;\r\n// }\r\n//\r\n// const useFindPlaces = (google, map, query, region) => {\r\n//   const [places, setPlaces] = useState(null);\r\n//   useEffect(() => {\r\n//     if(google == null || region == null || map == null) return;\r\n//     var service = new google.maps.places.PlacesService(map);\r\n//     var request = {\r\n//       location: new google.maps.LatLng(region[0].geometry.location.lat(), region[0].geometry.location.lng()),\r\n//       radius: '5000',\r\n//       query: '観光',\r\n//     }\r\n//     service.textSearch(request, (results, status) => {\r\n//       if (status == google.maps.places.PlacesServiceStatus.OK) {\r\n//         setPlaces(results);\r\n//         console.log(results)\r\n//       }\r\n//     })\r\n//   }, [google, map, region]);\r\n//   return places;\r\n// }\r\n//\r\n// const useDirection = (google, origin, destination, waypoints) => {\r\n//   const [direction, setDirection] = useState(null);\r\n//   useEffect(() => {\r\n//     if(google == null || waypoints == null) return;\r\n//     const directionsService = new google.maps.DirectionsService();\r\n//     // const directionsRenderer = new google.maps.DirectionsRenderer({suppressPolylines: true});\r\n//     // directionsRenderer.setMap(map);\r\n//     var request = {\r\n//       origin,\r\n//       destination,\r\n//       travelMode: google.maps.TravelMode.DRIVING,\r\n//     };\r\n//     if(waypoints != null){\r\n//       request.waypoints = waypoints;\r\n//       request.optimizeWaypoints = true;\r\n//     }\r\n//\r\n//     directionsService\r\n//       .route(request)\r\n//       .then((response) => {\r\n//         // directionsRenderer.setDirections(response);\r\n//         setDirection(response);\r\n//         console.log(response);\r\n//         // return response;\r\n//       })\r\n//       .catch((e) => console.log(\"Directions request failed due to \" + e));\r\n//   }, [google, waypoints])\r\n//\r\n//   return direction;\r\n// }\r\n","import { useState, useRef, useEffect } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n  useLocation,\n} from \"react-router-dom\";\n\nimport { Loader } from \"@googlemaps/js-api-loader\"\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  Container,\n  TextField,\n  Button,\n  Select,\n  MenuItem,\n  Box,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\n\nimport HomePage from './HomePage';\nimport ConditionPage from './ConditionPage';\nimport PlanPage from './PlanPage';\nimport EditPage from './EditPage';\nimport AddPage from './AddPage';\n\nexport default function App() {\n  return(\n    <Router>\n      <Switch>\n        <Route path=\"/condition\">\n          <ConditionPage />\n        </Route>\n        <Route path=\"/plan\">\n          <PlanPage />\n        </Route>\n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nconst Prefectures = () => {\n  var prefectures = ['大阪', '東京', '北海道', '福岡'];\n  const handleChange = (e) => {\n    console.log(e.target.value);\n  }\n  return(\n    <Box my={10} mx={5}>\n      <h2>都道府県から選ぶ</h2>\n      <Select onChange={handleChange}>\n        {prefectures.map(prefecture => <MenuItem value={prefecture}>{prefecture}</MenuItem>)}\n      </Select>\n    </Box>\n  )\n}\n\nconst Form = (props) =>{\n  const [region, setRegion] = useState('大阪');\n  const [origin, setOrigin] = useState('大阪駅');\n  const [destination, setDestination] = useState('萱嶋駅');\n  const history = useHistory();\n  const handleChangeOrigin = (e) => {\n    setOrigin(e.target.value);\n  }\n  const handleChangeDestination = (e) => {\n    setDestination(e.target.value);\n  }\n  const handleChangeRegion = (e) => {\n    setRegion(e.target.value);\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    history.push(props.path, {region: region, origin: origin, destination: destination});\n  }\n\n  return(\n    <form onSubmit={handleSubmit}>\n      <div>\n        Region: <input type='text' onChange={handleChangeRegion} value={region}/>\n      </div>\n      <div>\n        Origin: <input type='text' onChange={handleChangeOrigin} value={origin}/>\n      </div>\n      <div>\n        Destination: <input type='text' onChange={handleChangeDestination} value={destination}/>\n      </div>\n      <input type='submit' />\n    </form>\n  )\n}\n\nconst Legs = (props) => {\n  if(props.plan == null || props.legs == null) return(null);\n  var {plan, legs} = props;\n  var l = [];\n  for(var i = 0; i < plan.length; i++){\n    var cmp = (<li>\n                 <p>{plan[i].arrivalTime.text}, {plan[i].name}</p>\n                 <p>stay time: {plan[i].stayTime / 60}min</p>\n                 {i < legs.length ? <p>transit: {legs[i].duration.value / 60}min</p> : null}\n              </li>);\n    l.push(cmp)\n  }\n  return(\n    <>\n      <ul>{l}</ul>\n    </>\n  )\n}\n\nconst API_KEY = \"AIzaSyCkNip5D4glIDSddF__OlVzY1ovG5yVf7g\";\nconst initialConfig = {\n  zoom: 12,\n  center: { lat: 35.6432027, lng: 139.6729435 }\n}\n// var google, map;\n//\n// function Plan(){\n//   const [plan, setPlan] = useState(null);\n//   const [legs, setLegs] = useState(null);\n//   const mapContainerRef = useRef(null);\n//   const location = useLocation();\n//   var regionName = location.state.region, originName = location.state.origin, destinationName = location.state.destination;\n//   useEffect(async () => {\n//     const loader = new Loader({\n//       apiKey: API_KEY,\n//       version: \"weekly\",\n//       libraries: [\"places\"],\n//     });\n//     google = await loader.load().then((google) => {\n//       return google;\n//     })\n//\n//     map = new google.maps.Map(mapContainerRef.current, initialConfig);\n//\n//     var region = await findPlace(regionName);\n//\n//     var places = await findPlaces('観光', region[0].geometry.location);\n//\n//     var waypts = places.slice(0, 5).map(place => {\n//       return {\n//         location: place.formatted_address,\n//         stopover: true,\n//       }\n//     });\n//     // waypts = waypts.slice(0, 5);\n//     var direction = await drivingDirection(originName, destinationName, waypts);\n//     console.log(direction);\n//\n//     var legs = direction.routes[0].legs;\n//     var points = getPoints(direction, places);\n//     [points, legs] = await insertLunch(points, legs);\n//     legs.map(leg => {\n//       leg.duration.value *= 2;\n//     })\n//     var plan = getPlan(points, legs);\n//     setPlan(plan);\n//     setLegs(legs);\n//     for(var i = 0; i < plan.length; i++){\n//       new google.maps.Marker({\n//         position: {\n//           lat: plan[i].geometry.location.lat(),\n//           lng: plan[i].geometry.location.lng(),\n//         },\n//         label: String(i),\n//         map: map,\n//       });\n//     }\n//     map.setCenter({lat: plan[0].geometry.location.lat(), lng: plan[0].geometry.location.lng()});\n//\n//   }, []);\n//\n//   return(\n//     <>\n//       <Legs plan={plan} legs={legs}/>\n//       <div ref={mapContainerRef} style={{height: \"100vh\"}}>I can use the DOM with react ref</div>\n//     </>\n//   )\n// }\n//\n// const getPoints = (direction, places) => {\n//   var points = direction.routes[0].waypoint_order.map(i => {\n//     var point = places[i];\n//     point.stayTime = 1 * 3600;\n//     return point;\n//   });\n//   var origin = {\n//     name: direction.request.origin.query,\n//     geometry: {\n//       location: direction.routes[0].legs[0].start_location,\n//     },\n//     stayTime: 0,\n//   };\n//   var destination = {\n//     name: direction.request.destination.query,\n//     geometry: {\n//       location: direction.routes[0].legs.slice(-1)[0].end_location,\n//     },\n//     stayTime: 0,\n//   };\n//   points.unshift(origin);\n//   points.push(destination);\n//   return points;\n// }\n//\n// const insertLunch = async (points, legs) => {\n//   var time = 9 * 3600;\n//   var p = [], l = [];\n//   var gotLunch = false;\n//   for(var i = 0; i < points.length; i++){\n//     p.push(points[i]);\n//     time += points[i].stayTime;\n//     if(time >= 12 * 3600 && gotLunch == false){\n//       var [lunchPlace] = await findPlace('昼食', points[i].geometry.location);\n//       lunchPlace.stayTime = 3600;\n//       console.log(lunchPlace);\n//       var go = await drivingDirection(points[i].formatted_address, lunchPlace.formatted_address);\n//       var goLeg = go.routes[0].legs[0];\n//       var back = await drivingDirection(lunchPlace.formatted_address, points[i+1].formatted_address);\n//       var backLeg = back.routes[0].legs[0];\n//       p.push(lunchPlace);\n//       l.push(goLeg);\n//       l.push(backLeg);\n//       time += (goLeg.duration.value + backLeg.duration.value) * 2;\n//       gotLunch = true;\n//     }\n//     else{\n//       if(i < legs.length){\n//         time += legs[i].duration.value * 2;\n//         l.push(legs[i]);\n//       }\n//     }\n//   }\n//   return [p, l];\n// }\n//\n// const getPlan = (points, legs) => {\n//   var time = 9 * 3600;\n//   for(var i = 0; i < points.length; i++){\n//     points[i].arrivalTime = {\n//       text: getTimeStr(time),\n//       value: time,\n//     };\n//     if(i < legs.length){\n//       time += points[i].stayTime + legs[i].duration.value;\n//     }\n//   }\n//   return points;\n// }\n//\n// const findPlace = async (query, location) => {\n//   var service = new google.maps.places.PlacesService(map);\n//   var request = {\n//     query: query,\n//     fields: ['name', 'geometry', 'formatted_address'],\n//   };\n//   if(location != null){\n//     request.locationBias = {lat: location.lat(), lng: location.lng()};\n//   }\n//   var place = await new Promise(resolve => {\n//     service.findPlaceFromQuery(request, function(results, status) {\n//       if (status === google.maps.places.PlacesServiceStatus.OK) {\n//         resolve(results);\n//       }\n//     });\n//   });\n//   return place;\n// }\n//\n// const findPlaces = async (query, location) => {\n//   var service = new google.maps.places.PlacesService(map);\n//   var request = {\n//     location: new google.maps.LatLng(location.lat(), location.lng()),\n//     radius: '5000',\n//     query: '観光',\n//   }\n//   var places = await new Promise(resolve => {\n//     service.textSearch(request, (results, status) => {\n//       if (status == google.maps.places.PlacesServiceStatus.OK) {\n//         resolve(results);\n//       }\n//     })\n//   })\n//   return places;\n// }\n//\n// const drivingDirection = async (origin, destination, waypoints) => {\n//   const directionsService = new google.maps.DirectionsService();\n//   // const directionsRenderer = new google.maps.DirectionsRenderer({suppressPolylines: true});\n//   // directionsRenderer.setMap(map);\n//   var request = {\n//     origin,\n//     destination,\n//     travelMode: google.maps.TravelMode.DRIVING,\n//   };\n//   if(waypoints != null){\n//     request.waypoints = waypoints;\n//     request.optimizeWaypoints = true;\n//   }\n//\n//   var direction = await directionsService\n//     .route(request)\n//     .then((response) => {\n//       // directionsRenderer.setDirections(response);\n//       return response;\n//     })\n//     .catch((e) => console.log(\"Directions request failed due to \" + e));\n//   return direction\n// }\n//\n// function getTimeStr(sum){\n//   var h = Math.floor(sum / 3600);\n//   var m = Math.floor((sum % 3600) / 60);\n//   return `${('00' + h).slice(-2)}:${('00' + m).slice(-2)}`;\n// }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}