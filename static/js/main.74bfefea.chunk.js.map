{"version":3,"sources":["ButtonAppBar.js","Hero.js","TextForm.js","SingleLineImageList.js","img_osaka.jpg","img_hokkaido.jpg","img_tokyo.jpg","PopularRegions.js","HomePage.js","HeroImg.js","SwitchListSecondary.js","ConditionPage.js","Map.js","TitlebarImageList.js","EditPage.js","CustomizedTimeline.js","MediaCard.js","funcs.js","AddPage.js","PlanPages.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","Typography","variant","Button","Hero","Box","height","justifyContent","alignItems","display","bgcolor","mx","TextForm","props","useState","initialValue","text","setText","onSubmit","e","preventDefault","TextField","required","fullWidth","id","label","onChange","target","value","flexWrap","overflow","backgroundColor","palette","background","paper","imageList","transform","titleBar","SingleLineImageList","itemData","ImageList","cols","rowHeight","map","item","ImageListItem","onClick","src","img","alt","ImageListItemBar","PopularRegions","imgOsaka","imgTokyo","imgHokkaido","HomePage","history","useHistory","handleSubmit","regionName","push","my","width","HeroImg","form","SwitchListSecondary","React","checked","setChecked","setRegionName","originName","setOriginName","destinationName","setDestinationName","handleToggle","currentIndex","indexOf","newChecked","splice","condition","meal","List","subheader","ListSubheader","ListItem","ListItemText","primary","ListItemIcon","ListItemSecondaryAction","Switch","inputProps","type","maxWidth","ConditionPage","useLocation","state","status","Map","mapContainerRef","useRef","useMap","ref","style","useContext","PlanContext","google","setMap","useEffect","console","log","maps","current","zoom","center","lat","lng","icon","addIcon","TitlebarImageList","newSpots","spots","component","i","photos","getUrl","name","subtitle","actionIcon","actionPosition","onClickCancel","onClickAdd","fontSize","EditPage","plan","setPlan","padding","secondaryTail","secondary","main","CustomizedTimeline","itinerary","legs","timelineitems","length","spot","TimelineItem","TimelineOppositeContent","flex","arrivalTime","TimelineSeparator","TimelineDot","Avatar","TimelineConnector","TimelineContent","Paper","elevation","stayTime","leg","departureTime","duration","newText","Timeline","media","MediaCard","place","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","CardActions","size","showMarker","Marker","geometry","location","String","setCenter","makePlan","region","a","waypts","formatted_address","stopover","drivingDirection","direction","routes","getDurationStr","updateSpots","getItinerary","insertLunch","waypoint_order","slice","origin","request","query","start_location","destination","end_location","unshift","time","getTimeStr","findPlace","lunch","goDirection","goLeg","backDirection","backLeg","j","service","places","PlacesService","fields","locationBias","Promise","resolve","findPlaceFromQuery","results","PlacesServiceStatus","OK","findPlaces","LatLng","radius","textSearch","waypoints","directionsService","DirectionsService","travelMode","TravelMode","DRIVING","optimizeWaypoints","route","then","response","catch","h","Math","floor","m","str","AddPage","setQeury","setPlace","createContext","PlanPages","setGoogle","Provider","path","PlanPage","usePlan","Loader","apiKey","version","libraries","load","useGoogle","newPlan","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74bfefea.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            News\r\n          </Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nexport default function Hero() {\r\n  return(\r\n    <Box height=\"70vh\" justifyContent=\"center\" alignItems=\"center\" display=\"flex\" bgcolor='#3f51b5'>\r\n      <Box mx='auto'>\r\n        <Typography variant=\"h2\"><Box color=\"white\">Let's plan!</Box></Typography>\r\n        <Typography variant=\"subtitle1\"><Box color=\"white\">旅行の予定を自動で作成</Box></Typography>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport {\r\n  Box,\r\n  TextField,\r\n} from '@material-ui/core';\r\n\r\nexport default function TextForm(props){\r\n  const [text, setText] = useState(props.initialValue);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.onSubmit(text);\r\n  }\r\n  const handleChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n  return(\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField required fullWidth={props.fullWidth} id=\"standard-basic\" label={props.label} variant=\"filled\" onChange={handleChange} value={text}/>\r\n    </form>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ImageList from '@material-ui/core/ImageList';\r\nimport ImageListItem from '@material-ui/core/ImageListItem';\r\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\n// import itemData from './itemData';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  imageList: {\r\n    flexWrap: 'nowrap',\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n  },\r\n  title: {\r\n    color: 'white',\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const itemData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\n\r\n\r\nexport default function SingleLineImageList(props) {\r\n  const classes = useStyles();\r\n  const itemData = props.itemData;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ImageList className={classes.imageList} cols={2.5} rowHeight={120}>\r\n        {itemData.map((item, id) => (\r\n          <ImageListItem key={item.img} onClick={(e) => props.onClick(e, id)}>\r\n            <img src={item.img} alt={item.title} />\r\n            <ImageListItemBar\r\n              title={item.title}\r\n              classes={{\r\n                root: classes.titleBar,\r\n                title: classes.title,\r\n              }}\r\n            />\r\n          </ImageListItem>\r\n        ))}\r\n      </ImageList>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/img_osaka.c9ba6993.jpg\";","export default __webpack_public_path__ + \"static/media/img_hokkaido.bd87e191.jpg\";","export default __webpack_public_path__ + \"static/media/img_tokyo.ebbf7b3f.jpg\";","import {\r\n  Box,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nimport SingleLineImageList from './SingleLineImageList';\r\nimport imgOsaka from './img_osaka.jpg';\r\nimport imgHokkaido from './img_hokkaido.jpg';\r\nimport imgTokyo from './img_tokyo.jpg';\r\n\r\nexport default function PopularRegions(props){\r\n  var itemData = [\r\n    {\r\n      img: imgOsaka,\r\n      title: '大阪',\r\n    },\r\n    {\r\n      img: imgTokyo,\r\n      title: '東京',\r\n    },\r\n    {\r\n      img: imgHokkaido,\r\n      title: '北海道',\r\n    },\r\n  ];\r\n\r\n  const handleClick = (e, id) => {\r\n    props.onClick(itemData[id].title);\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <Typography variant='subtitle1'><Box color=\"gray\">人気のエリア</Box></Typography>\r\n      <SingleLineImageList itemData={itemData} onClick={handleClick}/>\r\n    </>\r\n  )\r\n}\r\n","import {\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport ButtonAppBar from './ButtonAppBar';\r\nimport Hero from './Hero';\r\nimport TextForm from './TextForm';\r\nimport PopularRegions from './PopularRegions';\r\n\r\nimport {\r\n  Box,\r\n} from '@material-ui/core';\r\n\r\n\r\nexport default function HomePage(){\r\n  const history = useHistory();\r\n  const handleSubmit = (regionName) => {\r\n    history.push('/condition', {regionName});\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <ButtonAppBar />\r\n      <Hero />\r\n      <Box mx={5}>\r\n        <Box my={5}>\r\n          <TextForm onSubmit={handleSubmit} initialValue={'大阪'} label={'Region'} fullWidth={true}/>\r\n        </Box>\r\n        <Box my={5}>\r\n          <PopularRegions onClick={handleSubmit}/>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n","import imgOsaka from './img_osaka.jpg';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '30vh',\r\n  },\r\n}));\r\n\r\nexport default function HeroImg(props){\r\n  const classes = useStyles();\r\n  // var item = props.img;\r\n\r\n  return(\r\n    <img className={classes.root} src={imgOsaka} alt={'alt'} />\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport WifiIcon from '@material-ui/icons/Wifi';\r\nimport BluetoothIcon from '@material-ui/icons/Bluetooth';\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\nimport { TextField, Button, Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  form: {\r\n  }\r\n}));\r\n\r\nexport default function SwitchListSecondary(props) {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState(['wifi']);\r\n  const [regionName, setRegionName] = useState(props.regionName);\r\n  const [originName, setOriginName] = useState('大阪駅');\r\n  const [destinationName, setDestinationName] = useState('萱嶋駅');\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleChangeRegionName = (e) => {\r\n    setRegionName(e.target.value);\r\n  }\r\n\r\n  const handleChangeOriginName = (e) => {\r\n    setOriginName(e.target.value);\r\n  }\r\n  const handleChangeDestinationName = (e) => {\r\n    setDestinationName(e.target.value);\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const meal = false;\r\n    if(checked.indexOf('meal') != -1) meal = true;\r\n    const condition = {regionName, originName, destinationName, meal};\r\n    props.onSubmit(condition);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <List subheader={<ListSubheader>Settings</ListSubheader>} className={classes.root}>\r\n        <ListItem>\r\n          <ListItemText primary=\"エリア\"/>\r\n          <TextField required variant=\"filled\" onChange={handleChangeRegionName} value={regionName}/>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary=\"出発\"/>\r\n          <TextField required variant=\"filled\" onChange={handleChangeOriginName} value={originName}/>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary=\"到着\"/>\r\n          <TextField variant=\"filled\" onChange={handleChangeDestinationName} value={destinationName}/>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemIcon>\r\n            <WifiIcon />\r\n          </ListItemIcon>\r\n          <ListItemText id=\"switch-list-label-wifi\" primary=\"Wi-Fi\" />\r\n          <ListItemSecondaryAction>\r\n            <Switch\r\n              edge=\"end\"\r\n              onChange={handleToggle('wifi')}\r\n              checked={checked.indexOf('wifi') !== -1}\r\n              inputProps={{ 'aria-labelledby': 'switch-list-label-wifi' }}\r\n            />\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemIcon>\r\n            <BluetoothIcon />\r\n          </ListItemIcon>\r\n          <ListItemText id=\"switch-list-label-bluetooth\" primary=\"Bluetooth\" />\r\n          <ListItemSecondaryAction>\r\n            <Switch\r\n              edge=\"end\"\r\n              onChange={handleToggle('bluetooth')}\r\n              checked={checked.indexOf('bluetooth') !== -1}\r\n              inputProps={{ 'aria-labelledby': 'switch-list-label-bluetooth' }}\r\n            />\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemIcon>\r\n            <FastfoodIcon />\r\n          </ListItemIcon>\r\n          <ListItemText id=\"switch-list-label-bluetooth\" primary=\"昼食を自動で追加\" />\r\n          <ListItemSecondaryAction>\r\n            <Switch\r\n              edge=\"end\"\r\n              onChange={handleToggle('meal')}\r\n              checked={checked.indexOf('meal') !== -1}\r\n              inputProps={{ 'aria-labelledby': 'switch-list-label-bluetooth' }}\r\n            />\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      </List>\r\n      <Box display='flex' justifyContent='center'>\r\n        <Button type=\"submit\" variant=\"contained\">PLAN!</Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n}\r\n","import {\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nimport ButtonAppBar from './ButtonAppBar';\r\nimport HeroImg from './HeroImg';\r\nimport SwitchListSecondary from './SwitchListSecondary';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Box,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '500px',\r\n  },\r\n}));\r\n\r\nexport default function ConditionPage(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const regionName = location.state.regionName;\r\n\r\n  const handleSubmit = (condition) => {\r\n    history.push('/plan', {...condition, status: 'first'});\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <ButtonAppBar />\r\n      <HeroImg regionName={regionName} />\r\n      <Box display='flex' justifyContent=\"center\" mx={5}>\r\n        <Box className={classes.root}>\r\n          <SwitchListSecondary onSubmit={handleSubmit} regionName={regionName}/>\r\n        </Box>\r\n      </Box>\r\n\r\n    </>\r\n  )\r\n}\r\n","import { useState, useRef, useEffect, useContext } from 'react'\r\n\r\nimport {\r\n  PlanContext,\r\n} from './PlanPages';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '30vh',\r\n  },\r\n}));\r\n\r\nexport default function Map(props){\r\n  const mapContainerRef = useRef(null);\r\n  useMap(mapContainerRef)\r\n  return(\r\n    <>\r\n      <div ref={mapContainerRef} style={{height: \"30vh\"}}>I can use the DOM with react ref</div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useMap = (mapContainerRef) => {\r\n  // const [map, setMap] = useState(null);\r\n  const {google, setMap} = useContext(PlanContext);\r\n  useEffect(() => {\r\n    console.log('useMap')\r\n    if(google == null || mapContainerRef == null) return;\r\n    const initialConfig = {\r\n      zoom: 12,\r\n      center: { lat: 35.6432027, lng: 139.6729435 }\r\n    }\r\n    const map = new google.maps.Map(mapContainerRef.current, initialConfig);\r\n    setMap(map);\r\n  }, [google, mapContainerRef]);\r\n  // return map;\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ImageList from '@material-ui/core/ImageList';\r\nimport ImageListItem from '@material-ui/core/ImageListItem';\r\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n// import itemData from './itemData';\r\nimport imgOsaka from './img_osaka.jpg';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {\r\n  Box,\r\n} from '@material-ui/core';\r\nimport {\r\n  useContext,\r\n} from 'react';\r\nimport {\r\n  PlanContext\r\n} from './PlanPages';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  imageList: {\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)',\r\n  },\r\n  addIcon: {\r\n    width: 50,\r\n    height: 50,\r\n  }\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const itemData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\nexport default function TitlebarImageList(props) {\r\n  const classes = useStyles();\r\n  const newSpots = props.spots;\r\n  if(newSpots == null) return(null);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ImageList rowHeight={180} className={classes.imageList}>\r\n        <ImageListItem key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n          <ListSubheader component=\"div\">Spots</ListSubheader>\r\n        </ImageListItem>\r\n        {newSpots.map((item, i) => (\r\n          <ImageListItem key={item.photos == null ? null: item.photos[0].getUrl()}>\r\n            <img src={item.photos == null ? null: item.photos[0].getUrl()} alt={item.name} />\r\n            <ImageListItemBar\r\n              title={item.name}\r\n              subtitle={<span>by: {item.name}</span>}\r\n              actionIcon={\r\n                <IconButton aria-label={`info about ${item.name}`} className={classes.icon}>\r\n                  <InfoIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n            <ImageListItemBar\r\n              position='top'\r\n              actionPosition='right'\r\n              actionIcon={\r\n                <IconButton onClick={() => props.onClickCancel(i)}><CancelIcon /></IconButton>\r\n              }>\r\n            </ImageListItemBar>\r\n          </ImageListItem>\r\n        ))}\r\n        <ImageListItem>\r\n          <Box display='flex' justifyContent='center' alignItems=\"center\" height='100%'>\r\n          <IconButton onClick={props.onClickAdd}>\r\n            <AddIcon fontSize='large' className={classes.addIcon}/>\r\n          </IconButton>\r\n          </Box>\r\n        </ImageListItem>\r\n      </ImageList>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  useEffect,\r\n  useContext,\r\n  useState,\r\n} from 'react';\r\nimport {\r\n  useHistory,\r\n} from 'react-router-dom';\r\n\r\nimport ButtonAppBar from './ButtonAppBar';\r\nimport Map from './Map';\r\nimport SwitchListSecondary from './SwitchListSecondary';\r\nimport TitlebarImageList from './TitlebarImageList';\r\nimport{\r\n  makePlan,\r\n  PlanContext,\r\n} from './PlanPages';\r\n\r\nimport {\r\n  Button,\r\n  Box,\r\n} from '@material-ui/core'\r\n\r\nexport default function EditPage(props){\r\n  const history = useHistory();\r\n  const {plan, setPlan} = useContext(PlanContext);\r\n  const handleClickAdd = () => {\r\n    history.push('/plan/add');\r\n  }\r\n  const handleClickCancel = (i) => {\r\n    plan.newSpots.splice(i, 1);\r\n    setPlan({...plan});\r\n    console.log(i);\r\n    console.log(plan);\r\n  }\r\n  const handleClickReturn = () => {\r\n    history.push('/plan', {status: 'cancel'});\r\n  }\r\n  const handleSubmit = (condition) => {\r\n    history.push('/plan', {...condition, status: 'new'});\r\n  }\r\n  useEffect(() => {\r\n    console.log('edit');\r\n  }, [])\r\n  return(\r\n    <>\r\n      <Box mx={5}>\r\n        <TitlebarImageList onClickAdd={handleClickAdd} onClickCancel={handleClickCancel} spots={plan.newSpots}/>\r\n        <SwitchListSecondary onSubmit={handleSubmit}/>\r\n        <Button type=\"submit\" variant=\"contained\" onClick={handleClickReturn}>辞める</Button>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport HotelIcon from '@material-ui/icons/Hotel';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TrainIcon from '@material-ui/icons/Train';\r\n\r\nimport {\r\n  Box,\r\n  Avatar,\r\n} from '@material-ui/core'\r\nimport imgOsaka from './img_osaka.jpg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: '6px 16px',\r\n  },\r\n  secondaryTail: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport default function CustomizedTimeline(props) {\r\n  const classes = useStyles();\r\n  var {plan} = props;\r\n  if(plan == null) return(null);\r\n  const {itinerary, legs} = plan;\r\n  var timelineitems = []\r\n  for(var i = 0; i < itinerary.length; i++){\r\n    var spot = (\r\n      <TimelineItem>\r\n        <TimelineOppositeContent style={{ flex: 0.1 }}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {itinerary[i].arrivalTime.text}\r\n          </Typography>\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineDot>\r\n            <Avatar alt=\"Remy Sharp\" src={itinerary[i].photos == null ? null: itinerary[i].photos[0].getUrl()} />\r\n          </TimelineDot>\r\n          <TimelineConnector />\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Paper elevation={3} className={classes.paper}>\r\n            <Typography variant=\"h6\" component=\"h1\">\r\n              {itinerary[i].name}\r\n            </Typography>\r\n            <Typography>stay time: {itinerary[i].stayTime.text}</Typography>\r\n          </Paper>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n    )\r\n    timelineitems.push(spot);\r\n    if(i < legs.length){\r\n      var leg = (\r\n        <TimelineItem>\r\n          <TimelineOppositeContent style={{ flex: 0.1 }}>\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              {itinerary[i].departureTime.text}\r\n            </Typography>\r\n          </TimelineOppositeContent>\r\n          <TimelineSeparator>\r\n            <TimelineDot>\r\n              <Avatar>\r\n                <TrainIcon />\r\n              </Avatar>\r\n            </TimelineDot>\r\n            <TimelineConnector />\r\n          </TimelineSeparator>\r\n          <TimelineContent>\r\n            <Box display=\"flex\" alignItems='center' height='100%'>\r\n              {legs[i].duration.newText} by transit\r\n            </Box>\r\n          </TimelineContent>\r\n        </TimelineItem>\r\n      )\r\n      timelineitems.push(leg);\r\n    }\r\n  }\r\n  return(\r\n    <Timeline>\r\n      {timelineitems}\r\n    </Timeline>\r\n  );\r\n\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function MediaCard(props) {\r\n  const classes = useStyles();\r\n  const {place} = props;\r\n  if(place == null) return(null);\r\n  console.log(place);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={place[0].photos[0].getUrl()}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {place[0].name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n            across all continents except Antarctica\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={props.onClick}>\r\n          ADD\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","export function showMarker(google, map, itinerary){\r\n  for(var i = 0; i < itinerary.length; i++){\r\n    new google.maps.Marker({\r\n      position: {\r\n        lat: itinerary[i].geometry.location.lat(),\r\n        lng: itinerary[i].geometry.location.lng(),\r\n      },\r\n      label: String(i),\r\n      map: map,\r\n    });\r\n  }\r\n  map.setCenter({lat: itinerary[0].geometry.location.lat(), lng: itinerary[0].geometry.location.lng()});\r\n}\r\n\r\nexport async function makePlan(google, map, originName, destinationName, region, spots){\r\n  var waypts = spots.map(spot => {\r\n    return {\r\n      location: spot.formatted_address,\r\n      stopover: true,\r\n    }\r\n  });\r\n  var direction = await drivingDirection(google, originName, destinationName, waypts);\r\n  var legs = direction.routes[0].legs;\r\n  legs.map(leg => {\r\n    leg.duration.value *= 2;\r\n    leg.duration.newText = getDurationStr(leg.duration.value);\r\n  })\r\n  var newSpots = updateSpots(direction, spots);\r\n  var itinerary = getItinerary(newSpots, legs, direction);\r\n  // [plan, legs] = await insertLunch(google, map, plan, legs);\r\n  await insertLunch(google, map, itinerary, legs);\r\n  console.log('makePlan');\r\n  return {spots: newSpots, itinerary, legs};\r\n}\r\n\r\nconst updateSpots = (direction, spots) => {\r\n  var newSpots = direction.routes[0].waypoint_order.map(i => {\r\n    var spot = spots[i];\r\n    spot.stayTime = {\r\n      value: 1 * 3600,\r\n      text: getDurationStr(1 * 3600),\r\n    };\r\n    return spot;\r\n  });\r\n  return newSpots;\r\n}\r\n\r\nconst getItinerary = (spots, legs, direction) => {\r\n  var itinerary = spots.slice();\r\n  var origin = {\r\n    name: direction.request.origin.query,\r\n    geometry: {\r\n      location: direction.routes[0].legs[0].start_location,\r\n    },\r\n    stayTime: {\r\n      value: 0,\r\n      text: getDurationStr(0),\r\n    }\r\n  };\r\n  var destination = {\r\n    name: direction.request.destination.query,\r\n    geometry: {\r\n      location: direction.routes[0].legs.slice(-1)[0].end_location,\r\n    },\r\n    stayTime: {\r\n      value: 0,\r\n      text: getDurationStr(0),\r\n    }\r\n  };\r\n  itinerary.unshift(origin);\r\n  itinerary.push(destination);\r\n\r\n  var time = 9 * 3600;\r\n  for(var i = 0; i < itinerary.length; i++){\r\n    itinerary[i].arrivalTime = {\r\n      text: getTimeStr(time),\r\n      value: time,\r\n    };\r\n    time += itinerary[i].stayTime.value;\r\n    itinerary[i].departureTime = {\r\n      text: getTimeStr(time),\r\n      value: time,\r\n    }\r\n    if(i < legs.length){\r\n      time += legs[i].duration.value;\r\n    }\r\n  }\r\n  return itinerary;\r\n}\r\n\r\nconst insertLunch = async (google, map, itinerary, legs) => {\r\n  for(var i = 0; i < itinerary.length - 1; i++){\r\n    if(itinerary[i].departureTime.value >= 12 * 3600){\r\n      var [lunch] = await findPlace(google, map, '昼食', itinerary[i].geometry.location);\r\n      lunch.stayTime = {\r\n        value: 3600,\r\n        text: getDurationStr(3600),\r\n      }\r\n      var goDirection = await drivingDirection(google, itinerary[i].formatted_address, lunch.formatted_address);\r\n      var goLeg = goDirection.routes[0].legs[0];\r\n      var backDirection = await drivingDirection(google, lunch.formatted_address, itinerary[i+1].formatted_address);\r\n      var backLeg = backDirection.routes[0].legs[0];\r\n      goLeg.duration.value *= 2;\r\n      goLeg.duration.newText = getDurationStr(goLeg.duration.value);\r\n      backLeg.duration.value *= 2;\r\n      backLeg.duration.newText = getDurationStr(backLeg.duration.value);\r\n      var time = itinerary[i].departureTime.value + goLeg.duration.value;\r\n      var duration = goLeg.duration.value + lunch.stayTime.value + backLeg.duration.value;\r\n      lunch.arrivalTime = {\r\n        value: time,\r\n        text: getTimeStr(time),\r\n      }\r\n      time += lunch.stayTime.value;\r\n      lunch.departureTime = {\r\n        value: time,\r\n        text: getTimeStr(time),\r\n      }\r\n      time += backLeg.duration.value;\r\n      for(var j = i + 1; j < itinerary.length; j++){\r\n        itinerary[j].arrivalTime.value += duration;\r\n        itinerary[j].arrivalTime.text = getTimeStr(itinerary[j].arrivalTime.value)\r\n        itinerary[j].departureTime.value += duration;\r\n        itinerary[j].departureTime.text = getTimeStr(itinerary[j].departureTime.value);\r\n      }\r\n      itinerary.splice(i, 0, lunch);\r\n      legs.splice(i, 1, goLeg, backLeg);\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nexport const findPlace = async (google, map, query, location) => {\r\n  var service = new google.maps.places.PlacesService(map);\r\n  var request = {\r\n    query: query,\r\n    fields: ['name', 'geometry', 'formatted_address', 'photos'],\r\n  };\r\n  if(location != null){\r\n    request.locationBias = {lat: location.lat(), lng: location.lng()};\r\n  }\r\n  var place = await new Promise(resolve => {\r\n    service.findPlaceFromQuery(request, function(results, status) {\r\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n        resolve(results);\r\n      }\r\n    });\r\n  });\r\n  return place;\r\n}\r\n\r\nexport const findPlaces = async (google, map, query, location) => {\r\n  var service = new google.maps.places.PlacesService(map);\r\n  var request = {\r\n    location: new google.maps.LatLng(location.lat(), location.lng()),\r\n    radius: '5000',\r\n    query,\r\n  }\r\n  var places = await new Promise(resolve => {\r\n    service.textSearch(request, (results, status) => {\r\n      if (status == google.maps.places.PlacesServiceStatus.OK) {\r\n        resolve(results);\r\n      }\r\n    })\r\n  })\r\n  return places;\r\n}\r\n\r\nconst drivingDirection = async (google, origin, destination, waypoints) => {\r\n  const directionsService = new google.maps.DirectionsService();\r\n  // const directionsRenderer = new google.maps.DirectionsRenderer({suppressPolylines: true});\r\n  // directionsRenderer.setMap(map);\r\n  var request = {\r\n    origin,\r\n    destination,\r\n    travelMode: google.maps.TravelMode.DRIVING,\r\n  };\r\n  if(waypoints != null){\r\n    request.waypoints = waypoints;\r\n    request.optimizeWaypoints = true;\r\n  }\r\n\r\n  var direction = await directionsService\r\n    .route(request)\r\n    .then((response) => {\r\n      // directionsRenderer.setDirections(response);\r\n      return response;\r\n    })\r\n    .catch((e) => console.log(\"Directions request failed due to \" + e));\r\n  return direction\r\n}\r\n\r\nfunction getTimeStr(time){\r\n  var h = Math.floor(time / 3600);\r\n  var m = Math.floor((time % 3600) / 60);\r\n  return `${('00' + h).slice(-2)}:${('00' + m).slice(-2)}`;\r\n}\r\nfunction getDurationStr(time){\r\n  var h = Math.floor(time / 3600);\r\n  var m = Math.floor((time % 3600) / 60);\r\n  var str = '';\r\n  if(h > 0) str += `${h}hour`;\r\n  if((m == 0 && h == 0) || m > 0){\r\n    str += `${m}min`;\r\n  }\r\n  return str;\r\n}\r\n","import ButtonAppBar from './ButtonAppBar';\r\nimport Map from './Map';\r\nimport MediaCard from './MediaCard';\r\nimport{\r\n  useHistory,\r\n} from 'react-router-dom';\r\nimport{\r\n  useEffect,\r\n  useState,\r\n  useContext,\r\n} from 'react';\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Button,\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n  PlanContext\r\n} from './PlanPages'\r\n\r\nimport {\r\n  findPlace,\r\n} from './funcs';\r\n\r\nexport default function AddPage(props){\r\n  const [query, setQeury] = useState('');\r\n  const [place, setPlace] = useState(null);\r\n  const history = useHistory();\r\n  const {google, map, plan, setPlan} = useContext(PlanContext);\r\n  const handleClick = () => {\r\n    console.log(place);\r\n    plan.newSpots.push(place[0]);\r\n    setPlan({...plan});\r\n    history.push('/plan/edit');\r\n  }\r\n  const handleChange = (e) => {\r\n    setQeury(e.target.value);\r\n  }\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    var place = await findPlace(google, map, query);\r\n    new google.maps.Marker({\r\n      position: {\r\n        lat: place[0].geometry.location.lat(),\r\n        lng: place[0].geometry.location.lng(),\r\n      },\r\n      label: '!',\r\n      map: map,\r\n    });\r\n    setPlace(place);\r\n  }\r\n  const handleClickReturn = () => {\r\n    history.push('/plan/edit');\r\n  }\r\n  return(\r\n    <>\r\n      <Box mx={5} my={5}>\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField fullWidth variant='filled' onChange={handleChange}/>\r\n        </form>\r\n        <Box my={5}>\r\n          <MediaCard place={place} onClick={handleClick}/>\r\n        </Box>\r\n        <Box display='flex' justifyContent='center' my={5}>\r\n          <Button type=\"submit\" variant=\"contained\" onClick={handleClickReturn}>戻る</Button>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useRef, useEffect, useContext, createContext } from 'react'\r\n\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nimport { Loader } from \"@googlemaps/js-api-loader\"\r\n\r\nimport Map from './Map';\r\nimport EditPage from './EditPage';\r\nimport ButtonAppBar from './ButtonAppBar';\r\nimport CustomizedTimeline from './CustomizedTimeline'\r\nimport AddPage from './AddPage';\r\n\r\nimport {\r\n  Button,\r\n  Box,\r\n} from '@material-ui/core'\r\n\r\nimport {\r\n  findPlace,\r\n  findPlaces,\r\n  makePlan,\r\n  showMarker,\r\n} from './funcs';\r\n\r\nexport const PlanContext = createContext();\r\n\r\nexport default function PlanPages(props){\r\n  const [google, setGoogle] = useState(null);\r\n  const [map, setMap] = useState(null);\r\n  const [plan, setPlan] = useState(null);\r\n  const value = {\r\n    google, setGoogle,\r\n    map, setMap,\r\n    plan, setPlan,\r\n  }\r\n\r\n  return(\r\n    <PlanContext.Provider value={value}>\r\n      <ButtonAppBar />\r\n      <Map google={google}/>\r\n      <Switch>\r\n        <Route path='/plan/edit'>\r\n          <EditPage />\r\n        </Route>\r\n        <Route path='/plan/add'>\r\n          <AddPage />\r\n        </Route>\r\n        <Route path='/plan'>\r\n          <PlanPage />\r\n        </Route>\r\n      </Switch>\r\n    </PlanContext.Provider>\r\n  )\r\n}\r\n\r\nfunction PlanPage(){\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const condition = location.state;\r\n  const handleClick = () => {\r\n    history.push('/plan/edit');\r\n  }\r\n  var plan = usePlan(condition);\r\n  return(\r\n    <>\r\n      <CustomizedTimeline plan={plan}/>\r\n      <Box display='flex' justifyContent='center' my={5}>\r\n        <Button type=\"submit\" variant=\"contained\" onClick={handleClick}>EDIT</Button>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useGoogle = () => {\r\n  // const [google, setGoogle] = useState(null);\r\n  const {google, setGoogle} = useContext(PlanContext);\r\n  useEffect(() => {\r\n    if(google != null) return;\r\n    const API_KEY = \"AIzaSyCkNip5D4glIDSddF__OlVzY1ovG5yVf7g\";\r\n    const loader = new Loader({\r\n      apiKey: API_KEY,\r\n      version: \"weekly\",\r\n      libraries: [\"places\"],\r\n    });\r\n    loader.load().then((google) => {\r\n      setGoogle(google);\r\n    })\r\n  })\r\n}\r\n\r\nconst usePlan = (condition) => {\r\n  useGoogle();\r\n  const {google, map, plan, setPlan} = useContext(PlanContext);\r\n\r\n  useEffect(async () => {\r\n    if(google == null || map == null) return;\r\n\r\n    // var regionName = '大阪', originName = '大阪駅', destinationName = '萱嶋駅';\r\n    const {regionName, originName, destinationName, meal, status} = condition;\r\n    var region, spots;\r\n    if(status == 'first'){\r\n      region = await findPlace(google, map, regionName);\r\n      spots = await findPlaces(google, map, '観光', region[0].geometry.location);\r\n      spots = spots.slice(0, 5);\r\n    }\r\n    else if(status == 'new'){\r\n      region = plan.region;\r\n      spots = plan.newSpots;\r\n    }\r\n    else if(status == 'cancel'){\r\n      plan.newSpots = [...plan.spots];\r\n      setPlan({...plan});\r\n      return plan;\r\n    }\r\n\r\n    const newPlan = await makePlan(google, map, originName, destinationName, region, spots);\r\n    newPlan.newSpots = [...newPlan.spots];\r\n\r\n    showMarker(google, map, newPlan.itinerary)\r\n    setPlan(newPlan);\r\n\r\n    console.log(region);\r\n    console.log(spots);\r\n    console.log(newPlan);\r\n  }, [google, map])\r\n  return plan;\r\n}\r\n","import { useState, useRef, useEffect, createContext } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n  useLocation,\n} from \"react-router-dom\";\n\nimport { Loader } from \"@googlemaps/js-api-loader\"\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  Container,\n  TextField,\n  Button,\n  Select,\n  MenuItem,\n  Box,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\n\nimport HomePage from './HomePage';\nimport ConditionPage from './ConditionPage';\nimport PlanPages from './PlanPages';\nimport EditPage from './EditPage';\nimport AddPage from './AddPage';\n\nexport default function App() {\n\n  return(\n    <Router>\n      <Switch>\n        <Route path=\"/condition\">\n          <ConditionPage />\n        </Route>\n        <Route path=\"/plan\">\n          <PlanPages />\n        </Route>\n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n// var google, map;\n//\n// function Plan(){\n//   const [plan, setPlan] = useState(null);\n//   const [legs, setLegs] = useState(null);\n//   const mapContainerRef = useRef(null);\n//   const location = useLocation();\n//   var regionName = location.state.region, originName = location.state.origin, destinationName = location.state.destination;\n//   useEffect(async () => {\n//     const loader = new Loader({\n//       apiKey: API_KEY,\n//       version: \"weekly\",\n//       libraries: [\"places\"],\n//     });\n//     google = await loader.load().then((google) => {\n//       return google;\n//     })\n//\n//     map = new google.maps.Map(mapContainerRef.current, initialConfig);\n//\n//     var region = await findPlace(regionName);\n//\n//     var places = await findPlaces('観光', region[0].geometry.location);\n//\n//     var waypts = places.slice(0, 5).map(place => {\n//       return {\n//         location: place.formatted_address,\n//         stopover: true,\n//       }\n//     });\n//     // waypts = waypts.slice(0, 5);\n//     var direction = await drivingDirection(originName, destinationName, waypts);\n//     console.log(direction);\n//\n//     var legs = direction.routes[0].legs;\n//     var points = getPoints(direction, places);\n//     [points, legs] = await insertLunch(points, legs);\n//     legs.map(leg => {\n//       leg.duration.value *= 2;\n//     })\n//     var plan = getPlan(points, legs);\n//     setPlan(plan);\n//     setLegs(legs);\n//     for(var i = 0; i < plan.length; i++){\n//       new google.maps.Marker({\n//         position: {\n//           lat: plan[i].geometry.location.lat(),\n//           lng: plan[i].geometry.location.lng(),\n//         },\n//         label: String(i),\n//         map: map,\n//       });\n//     }\n//     map.setCenter({lat: plan[0].geometry.location.lat(), lng: plan[0].geometry.location.lng()});\n//\n//   }, []);\n//\n//   return(\n//     <>\n//       <Legs plan={plan} legs={legs}/>\n//       <div ref={mapContainerRef} style={{height: \"100vh\"}}>I can use the DOM with react ref</div>\n//     </>\n//   )\n// }\n//\n// const getPoints = (direction, places) => {\n//   var points = direction.routes[0].waypoint_order.map(i => {\n//     var point = places[i];\n//     point.stayTime = 1 * 3600;\n//     return point;\n//   });\n//   var origin = {\n//     name: direction.request.origin.query,\n//     geometry: {\n//       location: direction.routes[0].legs[0].start_location,\n//     },\n//     stayTime: 0,\n//   };\n//   var destination = {\n//     name: direction.request.destination.query,\n//     geometry: {\n//       location: direction.routes[0].legs.slice(-1)[0].end_location,\n//     },\n//     stayTime: 0,\n//   };\n//   points.unshift(origin);\n//   points.push(destination);\n//   return points;\n// }\n//\n// const insertLunch = async (points, legs) => {\n//   var time = 9 * 3600;\n//   var p = [], l = [];\n//   var gotLunch = false;\n//   for(var i = 0; i < points.length; i++){\n//     p.push(points[i]);\n//     time += points[i].stayTime;\n//     if(time >= 12 * 3600 && gotLunch == false){\n//       var [lunchPlace] = await findPlace('昼食', points[i].geometry.location);\n//       lunchPlace.stayTime = 3600;\n//       console.log(lunchPlace);\n//       var go = await drivingDirection(points[i].formatted_address, lunchPlace.formatted_address);\n//       var goLeg = go.routes[0].legs[0];\n//       var back = await drivingDirection(lunchPlace.formatted_address, points[i+1].formatted_address);\n//       var backLeg = back.routes[0].legs[0];\n//       p.push(lunchPlace);\n//       l.push(goLeg);\n//       l.push(backLeg);\n//       time += (goLeg.duration.value + backLeg.duration.value) * 2;\n//       gotLunch = true;\n//     }\n//     else{\n//       if(i < legs.length){\n//         time += legs[i].duration.value * 2;\n//         l.push(legs[i]);\n//       }\n//     }\n//   }\n//   return [p, l];\n// }\n//\n// const getPlan = (points, legs) => {\n//   var time = 9 * 3600;\n//   for(var i = 0; i < points.length; i++){\n//     points[i].arrivalTime = {\n//       text: getTimeStr(time),\n//       value: time,\n//     };\n//     if(i < legs.length){\n//       time += points[i].stayTime + legs[i].duration.value;\n//     }\n//   }\n//   return points;\n// }\n//\n// const findPlace = async (query, location) => {\n//   var service = new google.maps.places.PlacesService(map);\n//   var request = {\n//     query: query,\n//     fields: ['name', 'geometry', 'formatted_address'],\n//   };\n//   if(location != null){\n//     request.locationBias = {lat: location.lat(), lng: location.lng()};\n//   }\n//   var place = await new Promise(resolve => {\n//     service.findPlaceFromQuery(request, function(results, status) {\n//       if (status === google.maps.places.PlacesServiceStatus.OK) {\n//         resolve(results);\n//       }\n//     });\n//   });\n//   return place;\n// }\n//\n// const findPlaces = async (query, location) => {\n//   var service = new google.maps.places.PlacesService(map);\n//   var request = {\n//     location: new google.maps.LatLng(location.lat(), location.lng()),\n//     radius: '5000',\n//     query: '観光',\n//   }\n//   var places = await new Promise(resolve => {\n//     service.textSearch(request, (results, status) => {\n//       if (status == google.maps.places.PlacesServiceStatus.OK) {\n//         resolve(results);\n//       }\n//     })\n//   })\n//   return places;\n// }\n//\n// const drivingDirection = async (origin, destination, waypoints) => {\n//   const directionsService = new google.maps.DirectionsService();\n//   // const directionsRenderer = new google.maps.DirectionsRenderer({suppressPolylines: true});\n//   // directionsRenderer.setMap(map);\n//   var request = {\n//     origin,\n//     destination,\n//     travelMode: google.maps.TravelMode.DRIVING,\n//   };\n//   if(waypoints != null){\n//     request.waypoints = waypoints;\n//     request.optimizeWaypoints = true;\n//   }\n//\n//   var direction = await directionsService\n//     .route(request)\n//     .then((response) => {\n//       // directionsRenderer.setDirections(response);\n//       return response;\n//     })\n//     .catch((e) => console.log(\"Directions request failed due to \" + e));\n//   return direction\n// }\n//\n// function getTimeStr(sum){\n//   var h = Math.floor(sum / 3600);\n//   var m = Math.floor((sum % 3600) / 60);\n//   return `${('00' + h).slice(-2)}:${('00' + m).slice(-2)}`;\n// }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}